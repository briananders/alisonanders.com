//colors
$black: #555759;
$white: #FAFCFE;
$darkest: #343638;
$dark: #888A8C;
$mid: #999B9D;
$light: #BBBDBF;
$lightest: #D0D2D4;
$off-white: #F0F2F4;
$robin_egg: #F2FFFE;
$blue: #DBF0F7;
$purple: #F5EEFD;
$green: #EAFFEF;
$green2: #F1FEED;
$yellow: #FFFFE3;
$red: #FFECEC;

@font-face {
  font-family: "Menagerie";
  src: url('/fonts/JustRealize.ttf') format("truetype");
}

@font-face {
  font-family: "Menagerie Bold";
  src: url('/fonts/JustRealizeBold.ttf') format("truetype");
}

@font-face {
  font-family: "Futura";
  src: url('/fonts/Futura.ttf') format("truetype");
}

@font-face {
  font-family: "Name";
  src: url('/fonts/Namer.ttf') format("truetype");
}

@font-face {
  font-family: "Jenna";
  src: url('/fonts/JennaSue.ttf') format("truetype");
}

$gutter: percentage(20px/940px); // 20px at 960px wide container, accounting for a 1/2 gutter width padding on the left and right of the container
$onecol: 6.3829787%; // 60px at 960px wide container
$columnsBreakPoint: 600px; // set this to the minimum width you want the columns to take effect at
$containerMaxWidth: 1040px; // set this to the maximum width you want .container to have
// MEDIA QUERY MIXINS
@mixin mq($query) {
  @media screen and (min-width: $query) {
    @content;
  }
  html.nr {
    @content;
  }
}

@mixin mq-max($query) {
  @media screen and (max-width: $query) {
    @content;
  }
}

@mixin columns($count:1) {
  width: ($onecol * $count) + ($gutter * ($count - 1));
}

@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

@mixin column-count($value:1) {
  -webkit-column-count: $value;
  -moz-column-count: $value;
  column-count: $value;
}

@mixin column-gap($value:0px) {
  -webkit-column-gap: $value;
  -moz-column-gap: $value;
  column-gap: $value;
}

@mixin retina() {
  @media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    @content;
  }
}

@mixin background-image-retina($image, $image-2x:"") {
  background-image: image-url("/images/"+$image);
  @if ($image-2x !="") {
    @include retina() {
      background-image: image-url("/images/"+$image-2x);
    }
    background-size: image-width($image-2x)/2 image-height($image-2x)/2;
  }
}

// MEDIA QUERY MIXINS
@mixin mq($query) {
  @media screen and (min-width: $query) {
    @content;
  }
  html.nr {
    @content;
  }
}

@mixin mq-max($query) {
  @media screen and (max-width: $query - 1) {
    @content;
  }
}

@mixin columns($count:1) {
  width: ($onecol * $count) + ($gutter * ($count - 1));
}

@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

@mixin column-count($value:1) {
  -webkit-column-count: $value;
  -moz-column-count: $value;
  column-count: $value;
}

@mixin column-gap($value:0px) {
  -webkit-column-gap: $value;
  -moz-column-gap: $value;
  column-gap: $value;
}

@mixin box-sizing($arg) {
  box-sizing: $arg;
}

@mixin box-shadow($args...) {
  -webkit-box-shadow: $args;
  -moz-box-shadow: $args;
  box-shadow: $args;
}

@mixin text-shadow($args...) {
  -webkit-text-shadow: $args;
  -moz-text-shadow: $args;
  text-shadow: $args;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@mixin transform($transforms) {
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -moz-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin appearance ($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}

%clearfix {
  *zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin retina() {
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    @content;
  }
}

@mixin filter($effect) {
  filter: $effect; // Browser Specific
  -webkit-filter: $effect;
  -moz-filter: $effect;
  -o-filter: $effect;
  -ms-filter: $effect;
}